// Code generated by Wire protocol buffer compiler, do not edit.
// Source: transit_realtime.CarriageDescriptor in xyz/ksharma/transport/gtfs_realtime.proto
@file:Suppress("DEPRECATION")

package xyz.ksharma.transit.realtime

import com.squareup.wire.EnumAdapter
import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_2
import com.squareup.wire.WireEnum
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import com.squareup.wire.`internal`.JvmStatic
import com.squareup.wire.`internal`.JvmSynthetic
import com.squareup.wire.`internal`.missingRequiredFields
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import okio.ByteString

/**
 * NEW
 */
public class CarriageDescriptor(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    schemaIndex = 0,
  )
  @JvmField
  public val name: String? = null,
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.REQUIRED,
    schemaIndex = 1,
  )
  @JvmField
  public val position_in_consist: Int,
  @field:WireField(
    tag = 3,
    adapter = "xyz.ksharma.transit.realtime.CarriageDescriptor${'$'}OccupancyStatus#ADAPTER",
    schemaIndex = 2,
  )
  @JvmField
  public val occupancy_status: OccupancyStatus? = null,
  @field:WireField(
    tag = 4,
    adapter = "com.squareup.wire.ProtoAdapter#BOOL",
    schemaIndex = 3,
  )
  @JvmField
  public val quiet_carriage: Boolean? = null,
  @field:WireField(
    tag = 5,
    adapter = "xyz.ksharma.transit.realtime.CarriageDescriptor${'$'}ToiletStatus#ADAPTER",
    schemaIndex = 4,
  )
  @JvmField
  public val toilet: ToiletStatus? = null,
  @field:WireField(
    tag = 6,
    adapter = "com.squareup.wire.ProtoAdapter#BOOL",
    schemaIndex = 5,
  )
  @JvmField
  public val luggage_rack: Boolean? = null,
  /**
   * 08/6/22 - Changed to Departure Occupancy Status to ensure its in line with GTFS-R
   * Specifications(https://github.com/google/transit/blob/master/gtfs-realtime/spec/en/reference.md#message-stoptimeevent)
   */
  @field:WireField(
    tag = 7,
    adapter = "xyz.ksharma.transit.realtime.CarriageDescriptor${'$'}OccupancyStatus#ADAPTER",
    schemaIndex = 6,
  )
  @JvmField
  public val departure_occupancy_status: OccupancyStatus? = null,
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<CarriageDescriptor, CarriageDescriptor.Builder>(ADAPTER, unknownFields) {
  override fun newBuilder(): Builder {
    val builder = Builder()
    builder.name = name
    builder.position_in_consist = position_in_consist
    builder.occupancy_status = occupancy_status
    builder.quiet_carriage = quiet_carriage
    builder.toilet = toilet
    builder.luggage_rack = luggage_rack
    builder.departure_occupancy_status = departure_occupancy_status
    builder.addUnknownFields(unknownFields)
    return builder
  }

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is CarriageDescriptor) return false
    if (unknownFields != other.unknownFields) return false
    if (name != other.name) return false
    if (position_in_consist != other.position_in_consist) return false
    if (occupancy_status != other.occupancy_status) return false
    if (quiet_carriage != other.quiet_carriage) return false
    if (toilet != other.toilet) return false
    if (luggage_rack != other.luggage_rack) return false
    if (departure_occupancy_status != other.departure_occupancy_status) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + (name?.hashCode() ?: 0)
      result = result * 37 + position_in_consist.hashCode()
      result = result * 37 + (occupancy_status?.hashCode() ?: 0)
      result = result * 37 + (quiet_carriage?.hashCode() ?: 0)
      result = result * 37 + (toilet?.hashCode() ?: 0)
      result = result * 37 + (luggage_rack?.hashCode() ?: 0)
      result = result * 37 + (departure_occupancy_status?.hashCode() ?: 0)
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    if (name != null) result += """name=${sanitize(name)}"""
    result += """position_in_consist=$position_in_consist"""
    if (occupancy_status != null) result += """occupancy_status=$occupancy_status"""
    if (quiet_carriage != null) result += """quiet_carriage=$quiet_carriage"""
    if (toilet != null) result += """toilet=$toilet"""
    if (luggage_rack != null) result += """luggage_rack=$luggage_rack"""
    if (departure_occupancy_status != null) result +=
        """departure_occupancy_status=$departure_occupancy_status"""
    return result.joinToString(prefix = "CarriageDescriptor{", separator = ", ", postfix = "}")
  }

  public fun copy(
    name: String? = this.name,
    position_in_consist: Int = this.position_in_consist,
    occupancy_status: OccupancyStatus? = this.occupancy_status,
    quiet_carriage: Boolean? = this.quiet_carriage,
    toilet: ToiletStatus? = this.toilet,
    luggage_rack: Boolean? = this.luggage_rack,
    departure_occupancy_status: OccupancyStatus? = this.departure_occupancy_status,
    unknownFields: ByteString = this.unknownFields,
  ): CarriageDescriptor = CarriageDescriptor(name, position_in_consist, occupancy_status,
      quiet_carriage, toilet, luggage_rack, departure_occupancy_status, unknownFields)

  public class Builder : Message.Builder<CarriageDescriptor, Builder>() {
    @JvmField
    public var name: String? = null

    @JvmField
    public var position_in_consist: Int? = null

    @JvmField
    public var occupancy_status: OccupancyStatus? = null

    @JvmField
    public var quiet_carriage: Boolean? = null

    @JvmField
    public var toilet: ToiletStatus? = null

    @JvmField
    public var luggage_rack: Boolean? = null

    @JvmField
    public var departure_occupancy_status: OccupancyStatus? = null

    public fun name(name: String?): Builder {
      this.name = name
      return this
    }

    public fun position_in_consist(position_in_consist: Int): Builder {
      this.position_in_consist = position_in_consist
      return this
    }

    public fun occupancy_status(occupancy_status: OccupancyStatus?): Builder {
      this.occupancy_status = occupancy_status
      return this
    }

    public fun quiet_carriage(quiet_carriage: Boolean?): Builder {
      this.quiet_carriage = quiet_carriage
      return this
    }

    public fun toilet(toilet: ToiletStatus?): Builder {
      this.toilet = toilet
      return this
    }

    public fun luggage_rack(luggage_rack: Boolean?): Builder {
      this.luggage_rack = luggage_rack
      return this
    }

    /**
     * 08/6/22 - Changed to Departure Occupancy Status to ensure its in line with GTFS-R
     * Specifications(https://github.com/google/transit/blob/master/gtfs-realtime/spec/en/reference.md#message-stoptimeevent)
     */
    public fun departure_occupancy_status(departure_occupancy_status: OccupancyStatus?): Builder {
      this.departure_occupancy_status = departure_occupancy_status
      return this
    }

    override fun build(): CarriageDescriptor = CarriageDescriptor(
      name = name,
      position_in_consist = position_in_consist ?: throw missingRequiredFields(position_in_consist,
          "position_in_consist"),
      occupancy_status = occupancy_status,
      quiet_carriage = quiet_carriage,
      toilet = toilet,
      luggage_rack = luggage_rack,
      departure_occupancy_status = departure_occupancy_status,
      unknownFields = buildUnknownFields()
    )
  }

  public companion object {
    public const val DEFAULT_QUIET_CARRIAGE: Boolean = false

    public const val DEFAULT_LUGGAGE_RACK: Boolean = false

    @JvmField
    public val ADAPTER: ProtoAdapter<CarriageDescriptor> = object :
        ProtoAdapter<CarriageDescriptor>(
      FieldEncoding.LENGTH_DELIMITED, 
      CarriageDescriptor::class, 
      "type.googleapis.com/transit_realtime.CarriageDescriptor", 
      PROTO_2, 
      null, 
      "xyz/ksharma/transport/gtfs_realtime.proto"
    ) {
      override fun encodedSize(`value`: CarriageDescriptor): Int {
        var size = value.unknownFields.size
        size += ProtoAdapter.STRING.encodedSizeWithTag(1, value.name)
        size += ProtoAdapter.INT32.encodedSizeWithTag(2, value.position_in_consist)
        size += OccupancyStatus.ADAPTER.encodedSizeWithTag(3, value.occupancy_status)
        size += ProtoAdapter.BOOL.encodedSizeWithTag(4, value.quiet_carriage)
        size += ToiletStatus.ADAPTER.encodedSizeWithTag(5, value.toilet)
        size += ProtoAdapter.BOOL.encodedSizeWithTag(6, value.luggage_rack)
        size += OccupancyStatus.ADAPTER.encodedSizeWithTag(7, value.departure_occupancy_status)
        return size
      }

      override fun encode(writer: ProtoWriter, `value`: CarriageDescriptor) {
        ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name)
        ProtoAdapter.INT32.encodeWithTag(writer, 2, value.position_in_consist)
        OccupancyStatus.ADAPTER.encodeWithTag(writer, 3, value.occupancy_status)
        ProtoAdapter.BOOL.encodeWithTag(writer, 4, value.quiet_carriage)
        ToiletStatus.ADAPTER.encodeWithTag(writer, 5, value.toilet)
        ProtoAdapter.BOOL.encodeWithTag(writer, 6, value.luggage_rack)
        OccupancyStatus.ADAPTER.encodeWithTag(writer, 7, value.departure_occupancy_status)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: CarriageDescriptor) {
        writer.writeBytes(value.unknownFields)
        OccupancyStatus.ADAPTER.encodeWithTag(writer, 7, value.departure_occupancy_status)
        ProtoAdapter.BOOL.encodeWithTag(writer, 6, value.luggage_rack)
        ToiletStatus.ADAPTER.encodeWithTag(writer, 5, value.toilet)
        ProtoAdapter.BOOL.encodeWithTag(writer, 4, value.quiet_carriage)
        OccupancyStatus.ADAPTER.encodeWithTag(writer, 3, value.occupancy_status)
        ProtoAdapter.INT32.encodeWithTag(writer, 2, value.position_in_consist)
        ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name)
      }

      override fun decode(reader: ProtoReader): CarriageDescriptor {
        var name: String? = null
        var position_in_consist: Int? = null
        var occupancy_status: OccupancyStatus? = null
        var quiet_carriage: Boolean? = null
        var toilet: ToiletStatus? = null
        var luggage_rack: Boolean? = null
        var departure_occupancy_status: OccupancyStatus? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> name = ProtoAdapter.STRING.decode(reader)
            2 -> position_in_consist = ProtoAdapter.INT32.decode(reader)
            3 -> try {
              occupancy_status = OccupancyStatus.ADAPTER.decode(reader)
            } catch (e: ProtoAdapter.EnumConstantNotFoundException) {
              reader.addUnknownField(tag, FieldEncoding.VARINT, e.value.toLong())
            }
            4 -> quiet_carriage = ProtoAdapter.BOOL.decode(reader)
            5 -> try {
              toilet = ToiletStatus.ADAPTER.decode(reader)
            } catch (e: ProtoAdapter.EnumConstantNotFoundException) {
              reader.addUnknownField(tag, FieldEncoding.VARINT, e.value.toLong())
            }
            6 -> luggage_rack = ProtoAdapter.BOOL.decode(reader)
            7 -> try {
              departure_occupancy_status = OccupancyStatus.ADAPTER.decode(reader)
            } catch (e: ProtoAdapter.EnumConstantNotFoundException) {
              reader.addUnknownField(tag, FieldEncoding.VARINT, e.value.toLong())
            }
            else -> reader.readUnknownField(tag)
          }
        }
        return CarriageDescriptor(
          name = name,
          position_in_consist = position_in_consist ?: throw
              missingRequiredFields(position_in_consist, "position_in_consist"),
          occupancy_status = occupancy_status,
          quiet_carriage = quiet_carriage,
          toilet = toilet,
          luggage_rack = luggage_rack,
          departure_occupancy_status = departure_occupancy_status,
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: CarriageDescriptor): CarriageDescriptor = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L

    @JvmSynthetic
    public inline fun build(body: Builder.() -> Unit): CarriageDescriptor =
        Builder().apply(body).build()
  }

  public enum class OccupancyStatus(
    override val `value`: Int,
  ) : WireEnum {
    EMPTY(0),
    MANY_SEATS_AVAILABLE(1),
    FEW_SEATS_AVAILABLE(2),
    STANDING_ROOM_ONLY(3),
    CRUSHED_STANDING_ROOM_ONLY(4),
    FULL(5),
    ;

    public companion object {
      @JvmField
      public val ADAPTER: ProtoAdapter<OccupancyStatus> = object : EnumAdapter<OccupancyStatus>(
        OccupancyStatus::class, 
        PROTO_2, 
        OccupancyStatus.EMPTY
      ) {
        override fun fromValue(`value`: Int): OccupancyStatus? = OccupancyStatus.fromValue(`value`)
      }

      @JvmStatic
      public fun fromValue(`value`: Int): OccupancyStatus? = when (`value`) {
        0 -> EMPTY
        1 -> MANY_SEATS_AVAILABLE
        2 -> FEW_SEATS_AVAILABLE
        3 -> STANDING_ROOM_ONLY
        4 -> CRUSHED_STANDING_ROOM_ONLY
        5 -> FULL
        else -> null
      }
    }
  }

  public enum class ToiletStatus(
    override val `value`: Int,
  ) : WireEnum {
    NONE(0),
    NORMAL(1),
    ACCESSIBLE(2),
    ;

    public companion object {
      @JvmField
      public val ADAPTER: ProtoAdapter<ToiletStatus> = object : EnumAdapter<ToiletStatus>(
        ToiletStatus::class, 
        PROTO_2, 
        ToiletStatus.NONE
      ) {
        override fun fromValue(`value`: Int): ToiletStatus? = ToiletStatus.fromValue(`value`)
      }

      @JvmStatic
      public fun fromValue(`value`: Int): ToiletStatus? = when (`value`) {
        0 -> NONE
        1 -> NORMAL
        2 -> ACCESSIBLE
        else -> null
      }
    }
  }
}

// Code generated by Wire protocol buffer compiler, do not edit.
// Source: transit_realtime.TimeRange in xyz/ksharma/transport/gtfs_realtime.proto
@file:Suppress("DEPRECATION")

package xyz.ksharma.transit.realtime

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_2
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import com.squareup.wire.`internal`.JvmSynthetic
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import okio.ByteString

public class TimeRange(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#UINT64",
    schemaIndex = 0,
  )
  @JvmField
  public val start: Long? = null,
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#UINT64",
    schemaIndex = 1,
  )
  @JvmField
  public val end: Long? = null,
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<TimeRange, TimeRange.Builder>(ADAPTER, unknownFields) {
  override fun newBuilder(): Builder {
    val builder = Builder()
    builder.start = start
    builder.end = end
    builder.addUnknownFields(unknownFields)
    return builder
  }

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is TimeRange) return false
    if (unknownFields != other.unknownFields) return false
    if (start != other.start) return false
    if (end != other.end) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + (start?.hashCode() ?: 0)
      result = result * 37 + (end?.hashCode() ?: 0)
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    if (start != null) result += """start=$start"""
    if (end != null) result += """end=$end"""
    return result.joinToString(prefix = "TimeRange{", separator = ", ", postfix = "}")
  }

  public fun copy(
    start: Long? = this.start,
    end: Long? = this.end,
    unknownFields: ByteString = this.unknownFields,
  ): TimeRange = TimeRange(start, end, unknownFields)

  public class Builder : Message.Builder<TimeRange, Builder>() {
    @JvmField
    public var start: Long? = null

    @JvmField
    public var end: Long? = null

    public fun start(start: Long?): Builder {
      this.start = start
      return this
    }

    public fun end(end: Long?): Builder {
      this.end = end
      return this
    }

    override fun build(): TimeRange = TimeRange(
      start = start,
      end = end,
      unknownFields = buildUnknownFields()
    )
  }

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<TimeRange> = object : ProtoAdapter<TimeRange>(
      FieldEncoding.LENGTH_DELIMITED, 
      TimeRange::class, 
      "type.googleapis.com/transit_realtime.TimeRange", 
      PROTO_2, 
      null, 
      "xyz/ksharma/transport/gtfs_realtime.proto"
    ) {
      override fun encodedSize(`value`: TimeRange): Int {
        var size = value.unknownFields.size
        size += ProtoAdapter.UINT64.encodedSizeWithTag(1, value.start)
        size += ProtoAdapter.UINT64.encodedSizeWithTag(2, value.end)
        return size
      }

      override fun encode(writer: ProtoWriter, `value`: TimeRange) {
        ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.start)
        ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.end)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: TimeRange) {
        writer.writeBytes(value.unknownFields)
        ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.end)
        ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.start)
      }

      override fun decode(reader: ProtoReader): TimeRange {
        var start: Long? = null
        var end: Long? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> start = ProtoAdapter.UINT64.decode(reader)
            2 -> end = ProtoAdapter.UINT64.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return TimeRange(
          start = start,
          end = end,
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: TimeRange): TimeRange = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L

    @JvmSynthetic
    public inline fun build(body: Builder.() -> Unit): TimeRange = Builder().apply(body).build()
  }
}
